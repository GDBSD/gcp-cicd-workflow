steps:
# ↓↓↓↓↓↓↓ Start of Continuous Integration Part ↓↓↓↓↓↓↓↓↓↓↓↓ #####
- name: 'gcr.io/cloud-builders/git'
  args:
    [
      'clone',
      '--recurse-submodules',
      'https://github.com/GDBSD/gcp-cicd-workflow'
    ]

  # Variable $COMMIT_SHA provided by the Cloud Build so we test the correct commit.
- name: 'gcr.io/cloud-builders/git'
  args:
    [
      'checkout',
      '$COMMIT_SHA'
    ]
  dir: 'gcp-cicd-workflow'

  # Creates a Python virtualenv stored in /workspace/venv that will persist across container runs.
- name: 'gcr.io/cloud-builders/git'
  entrypoint: 'venv/bin/pip'
  args: ['install', '-V', '-r', 'requirements.txt']

#- name: 'gcr.io/cloud-builders/git'
#  entrypoint: '/bin/bash'
#  args:
#    [
#      '-c',
#      'pip install virtualenv'
#    ]
  # Cloud Build automatically substitutes $PROJECT_ID for your Project ID
#- name: 'gcr.io/$PROJECT_ID/python-cloudbuild'
#  entrypoint: '/bin/bash'
#  args: ['-c','virtualenv /workspace/venv' ]
#- name: 'gcr.io/$PROJECT_ID/python-cloudbuild'
#  entrypoint: 'venv/bin/pip'
#  args: ['install', '-V', '-r', 'requirements.txt']